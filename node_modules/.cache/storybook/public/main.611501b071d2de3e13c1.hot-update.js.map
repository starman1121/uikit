{"version":3,"file":"main.611501b071d2de3e13c1.hot-update.js","sources":["webpack:///./src/components/Dropdown/Dropdown.tsx","webpack:///./src/components/Dropdown/index.stories.tsx","webpack:///./src/widgets/Menu/Menu.tsx","webpack:///./src/widgets/Menu/components/LangSelector.tsx","webpack:///./src/widgets/Menu/components/Logo.tsx","webpack:///./src/widgets/Menu/components/MenuButton.tsx","webpack:///./src/widgets/Menu/components/SubNavPrice.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropdownProps, PositionProps, Position } from \"./types\";\r\n\r\nconst getLeft = ({ position }: PositionProps) => {\r\n  if (position === \"top-right\") {\r\n    return \"100%\";\r\n  }\r\n  return \"50%\";\r\n};\r\n\r\nconst getBottom = ({ position }: PositionProps) => {\r\n  if (position === \"top\" || position === \"top-right\") {\r\n    return \"100%\";\r\n  }\r\n  return \"auto\";\r\n};\r\n\r\nconst DropdownContent = styled.div<{ position: Position }>`\r\n  width: max-content;\r\n  display: none;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  transform: translate(-50%, 0);\r\n  left: ${getLeft};\r\n  bottom: ${getBottom};\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  box-shadow: ${({ theme }) => theme.shadows.level1};\r\n  padding: 16px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  border-radius: ${({ theme }) => theme.radii.small};\r\n`;\r\n\r\nconst LangDropdownContent = styled.div<{ position: Position }>`\r\n  width: max-content;\r\n  display: none;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  transform: translate(-50%, 0);\r\n  left: ${getLeft};\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  box-shadow: ${({ theme }) => theme.shadows.level1};\r\n  padding: 16px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  border-radius: ${({ theme }) => theme.radii.small};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  &:hover ${DropdownContent}, &:focus-within ${DropdownContent} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst LangContainer = styled.div`\r\n  position: relative;\r\n  &:hover ${LangDropdownContent}, &:focus-within ${LangDropdownContent} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({ target, position = \"bottom\", children }) => {\r\n  return (\r\n    <Container>\r\n      {target}\r\n      <DropdownContent position={position}>{children}</DropdownContent>\r\n    </Container>\r\n  );\r\n};\r\nDropdown.defaultProps = {\r\n  position: \"bottom\",\r\n};\r\n\r\nexport const LangDropdown: React.FC<DropdownProps> = ({ target, position = \"bottom\", children }) => {\r\n  return (\r\n    <LangContainer>\r\n      {target}\r\n      <LangDropdownContent position={position}>{children}</LangDropdownContent>\r\n    </LangContainer>\r\n  );\r\n};\r\nDropdown.defaultProps = {\r\n  position: \"bottom\",\r\n};\r\n\r\nexport default Dropdown;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport Button from \\\"../Button/Button\\\";\\r\\nimport Flex from \\\"../Box/Flex\\\";\\r\\nimport Dropdown from \\\"./Dropdown\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Components/Dropdown\\\",\\r\\n  component: Dropdown,\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nexport const Default: React.FC = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Dropdown target={<Button>Hover</Button>}>\\r\\n        {[...Array(30)].map(() => (\\r\\n          <div>Content</div>\\r\\n        ))}\\r\\n      </Dropdown>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Top: React.FC = () => {\\r\\n  return (\\r\\n    <Flex justifyContent=\\\"space-between\\\" style={{ marginTop: \\\"400px\\\" }}>\\r\\n      <Dropdown position=\\\"top-right\\\" target={<Button>Top right</Button>}>\\r\\n        {[...Array(20)].map(() => (\\r\\n          <div>Content</div>\\r\\n        ))}\\r\\n      </Dropdown>\\r\\n      <Dropdown position=\\\"top\\\" target={<Button>Top</Button>}>\\r\\n        {[...Array(20)].map(() => (\\r\\n          <div>Content</div>\\r\\n        ))}\\r\\n      </Dropdown>\\r\\n    </Flex>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":33,\"line\":12},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":33,\"line\":12},\"endBody\":{\"col\":1,\"line\":22}},\"Top\":{\"startLoc\":{\"col\":29,\"line\":24},\"endLoc\":{\"col\":1,\"line\":39},\"startBody\":{\"col\":29,\"line\":24},\"endBody\":{\"col\":1,\"line\":39}}};\n    \nimport React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport Flex from \"../Box/Flex\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nexport default {\r\n  title: \"Components/Dropdown\",\r\n  component: Dropdown,\r\n  argTypes: {},\r\n};\r\n\r\nexport const Default: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Dropdown target={<Button>Hover</Button>}>\r\n        {[...Array(30)].map(() => (\r\n          <div>Content</div>\r\n        ))}\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};;\r\n\r\nexport const Top: React.FC = () => {\r\n  return (\r\n    <Flex justifyContent=\"space-between\" style={{ marginTop: \"400px\" }}>\r\n      <Dropdown position=\"top-right\" target={<Button>Top right</Button>}>\r\n        {[...Array(20)].map(() => (\r\n          <div>Content</div>\r\n        ))}\r\n      </Dropdown>\r\n      <Dropdown position=\"top\" target={<Button>Top</Button>}>\r\n        {[...Array(20)].map(() => (\r\n          <div>Content</div>\r\n        ))}\r\n      </Dropdown>\r\n    </Flex>\r\n  );\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Dropdown target={<Button>Hover</Button>}>\\r\\n        {[...Array(30)].map(() => (\\r\\n          <div>Content</div>\\r\\n        ))}\\r\\n      </Dropdown>\\r\\n    </div>\\r\\n  );\\r\\n}\" }, ...Default.parameters };\nTop.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <Flex justifyContent=\\\"space-between\\\" style={{ marginTop: \\\"400px\\\" }}>\\r\\n      <Dropdown position=\\\"top-right\\\" target={<Button>Top right</Button>}>\\r\\n        {[...Array(20)].map(() => (\\r\\n          <div>Content</div>\\r\\n        ))}\\r\\n      </Dropdown>\\r\\n      <Dropdown position=\\\"top\\\" target={<Button>Top</Button>}>\\r\\n        {[...Array(20)].map(() => (\\r\\n          <div>Content</div>\\r\\n        ))}\\r\\n      </Dropdown>\\r\\n    </Flex>\\r\\n  );\\r\\n}\" }, ...Top.parameters };","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled, {DefaultTheme} from \"styled-components\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport throttle from \"lodash/throttle\";\r\nimport Overlay from \"../../components/Overlay/Overlay\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport { useMatchBreakpoints } from \"../../hooks\";\r\nimport Logo from \"./components/Logo\";\r\nimport Panel from \"./components/Panel\";\r\nimport { NavProps } from \"./types\";\r\nimport { MENU_HEIGHT, SUBNAV_LINK_HEIGHT, MENU_ENTRY_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"./config\";\r\nimport { LinkLabel, LinkStatus, MenuEntry } from \"./components/MenuEntry\";\r\nimport MenuLink from \"./components/MenuLink\";\r\nimport { SvgProps } from \"../../components/Svg\";\r\nimport * as IconModule from \"./icons\";\r\nimport treePriceUsd from \"./components/TreasurePrice\";\r\nimport SubNavPrice from \"./components/SubNavPrice\";\r\nimport SubNavThemeSwitcher from \"./components/SubNavThemeSwitcher\";\r\nimport LangSelector from \"./components/LangSelector\";\r\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\r\n\r\nexport interface Props {\r\n  isActive?: boolean;\r\n  primaryMenu?: boolean;\r\n  theme: DefaultTheme;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledNav = styled.nav<{ primaryMenu: boolean, isHome: boolean }>`\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0;\r\n  transition: top 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 8px;\r\n  padding-right: 16px;\r\n  width: 100%;\r\n  height: ${MENU_HEIGHT}px;\r\n  box-shadow: ${({ primaryMenu }) => (primaryMenu ? `none` : `0 0 20px 0 rgb(18 24 58 / 15%)`)};\r\n  // background-color: ${({ isHome, theme }) => isHome ? 'transparent' : theme.nav.background};\r\n  background-color: ${({ primaryMenu, theme }) => primaryMenu ? 'transparent' : theme.nav.background};\r\n  z-index: 20;\r\n  transform: translate3d(0, 0, 0);\r\n`;\r\n\r\nconst BodyWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean, isHome: boolean }>`\r\n  flex-grow: 1;\r\n  margin-top: ${({ isHome, showMenu }) => (isHome ? 0 : showMenu ? `${MENU_HEIGHT}px` : 0)};\r\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  transform: translate3d(0, 0, 0);\r\n  max-width: 100%;\r\n\r\n  // ${({ theme }) => theme.mediaQueries.nav} {\r\n  //   margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\r\n  //   max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\r\n  // }\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    margin-left: 0;\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst MobileOnlyOverlay = styled(Overlay)`\r\n  position: fixed;\r\n  height: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SubNavContainer = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst ConnectContainer = styled.div`\r\n  display: flex;\r\n  width: fit-content;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledLinkContainer = styled.div`\r\n  display: none;\r\n  padding-top: 4px;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n  min-width: 400px;\r\n  max-width: 900px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    width: 100%;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled.div<Props>`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  letter-spacing: 1px;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  height: ${SUBNAV_LINK_HEIGHT}px;\r\n  color: ${({ isActive, primaryMenu, theme }) => (primaryMenu ? `#FFFFFF` : isActive ? theme.colors.textActive : theme.colors.textInActive)};\r\n  // border-bottom: 4px solid;\r\n  // border-bottom-color: ${({ isActive, theme }) => (isActive ? theme.colors.primaryBright : \"transparent\")};\r\n  // box-shadow: ${({ isActive, theme }) => (isActive ? `0px 4px 0px ${theme.colors.primaryBright}` : \"none\")};\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => (theme.colors.textActive)};\r\n  }\r\n`;\r\n\r\nconst StyledNavLinkLabel = styled.div`\r\n  transition: color 0.4s;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Menu: React.FC<NavProps> = ({\r\n  userMenu,\r\n  globalMenu,\r\n  isDark,\r\n  toggleTheme,\r\n  langs,\r\n  setLang,\r\n  currentLang,\r\n  treePriceUsd,\r\n  activeItem,\r\n  activeSubItem,\r\n  links,\r\n  children,\r\n}) => {\r\n  // const { isMobile, isTablet } = useMatchBreakpoints();\r\n  // const isSmallerScreen = isMobile || isTablet;\r\n  const { isXl } = useMatchBreakpoints();\r\n  const isMobile = isXl === false;\r\n  const [isPushed, setIsPushed] = useState(false);\r\n  const [primaryMenu, setPrimaryMenu] = useState(false);\r\n  const refPrevOffset = useRef(window.pageYOffset);\r\n  const location = useLocation();\r\n  // const isHome = location.pathname === '/';\r\n  const isHome = true\r\n  console.log(\"debug test\")\r\n  useEffect(() => {\r\n    if (isHome) {\r\n      setPrimaryMenu(true);\r\n    } else {\r\n      setPrimaryMenu(false);\r\n    }\r\n    const handleScroll = () => {\r\n      const currentOffset = window.pageYOffset;\r\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight;\r\n      const isTopOfPage = currentOffset === 0;\r\n      // Always show the menu when user reach the top\r\n      if (isTopOfPage && isHome) {\r\n        setPrimaryMenu(true);\r\n      } else {\r\n        setPrimaryMenu(false);\r\n      }\r\n    };\r\n    const throttledHandleScroll = throttle(handleScroll, 200);\r\n\r\n    window.addEventListener(\"scroll\", throttledHandleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\r\n    };\r\n  }, [isHome]);\r\n\r\n  // Find the home link if provided\r\n  const homeLink = links.find((link) => link.label === \"Home\");\r\n\r\n  // Close the menu when a user clicks a link on mobile\r\n  const handleClick = isMobile ? () => setIsPushed(false) : undefined;\r\n \r\n  return (\r\n    <Wrapper>\r\n      <StyledNav primaryMenu={primaryMenu} isHome={isHome}>\r\n        <Logo\r\n          isPushed={isPushed}\r\n          isDark={isDark}\r\n          primaryMenu={primaryMenu}\r\n          togglePush={() => setIsPushed((prevState: boolean) => !prevState)}\r\n          href={homeLink?.href ?? \"/\"}\r\n        />\r\n        <SubNavContainer>\r\n          <StyledLinkContainer>\r\n            {\r\n              links.map(entry => {\r\n                return (\r\n                  <StyledNavLink key={entry.href} isActive={entry.href === activeItem || entry.href === activeSubItem} primaryMenu={primaryMenu}>\r\n                    <MenuLink href={entry.href}>\r\n                      <StyledNavLinkLabel>{entry.label}</StyledNavLinkLabel>\r\n                    </MenuLink>\r\n                  </StyledNavLink>\r\n                )\r\n              })\r\n            }\r\n          </StyledLinkContainer>\r\n          <ConnectContainer>\r\n            <Flex>\r\n              {/* <SubNavThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} /> */}\r\n              <LangSelector currentLang={currentLang} langs={langs} setLang={setLang} />\r\n            </Flex>\r\n            <Flex>\r\n              <SubNavPrice treePriceUsd={treePriceUsd} />\r\n              {userMenu}\r\n            </Flex>\r\n          </ConnectContainer>\r\n        </SubNavContainer>\r\n      </StyledNav>\r\n     \r\n      <BodyWrapper>\r\n        <Panel\r\n          isPushed={isPushed}\r\n          isMobile={isMobile}\r\n          showMenu={true}\r\n          isDark={isDark}\r\n          toggleTheme={toggleTheme}\r\n          langs={langs}\r\n          setLang={setLang}\r\n          currentLang={currentLang}\r\n          treePriceUsd={treePriceUsd}\r\n          pushNav={setIsPushed}\r\n          links={links}\r\n        />\r\n        \r\n        <Inner isPushed={isPushed} showMenu={true} isHome={isHome}>\r\n          {children}\r\n        </Inner>\r\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\r\n      </BodyWrapper>\r\n     \r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Text from \"../../../components/Text/Text\";\r\nimport {LangDropdown} from \"../../../components/Dropdown/Dropdown\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport LanguageIcon from \"../../../components/Svg/Icons/Language\";\r\nimport { Language } from \"../types\";\r\nimport {LangMenuButton} from \"./MenuButton\";\r\n\r\ninterface Props {\r\n  currentLang: string;\r\n  langs: Language[];\r\n  setLang: (lang: Language) => void;\r\n}\r\n\r\nconst LangSelector: React.FC<Props> = ({ currentLang, langs, setLang }) => (\r\n  <LangDropdown\r\n    position=\"top-right\"\r\n    target={\r\n      <Button variant=\"text\" startIcon={<LanguageIcon color=\"#fff\" width=\"24px\" />}>\r\n        <Text color=\"#fff\">{currentLang?.toUpperCase()}</Text>\r\n      </Button>\r\n    }\r\n  >\r\n    {langs.map((lang) => (\r\n      <LangMenuButton\r\n        key={lang.locale}\r\n        fullWidth\r\n        onClick={() => setLang(lang)}\r\n        // Safari fix\r\n        style={{ minHeight: \"32px\", height: \"auto\" }}\r\n      >\r\n        {lang.language}\r\n      </LangMenuButton>\r\n    ))}\r\n  </LangDropdown>\r\n);\r\n\r\nexport default React.memo(LangSelector, (prev, next) => prev.currentLang === next.currentLang);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LogoIcon } from \"../../../components/Svg\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"../icons\";\r\nimport MenuButton from \"./MenuButton\";\r\n\r\ninterface Props {\r\n  isPushed: boolean;\r\n  isDark: boolean;\r\n  primaryMenu: boolean;\r\n  togglePush: () => void;\r\n  href: string;\r\n}\r\n\r\nconst blink = keyframes`\r\n  0%,  100% { transform: scaleY(1); } \r\n  50% { transform:  scaleY(0.1); } \r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  .mobile-icon {\r\n    height: 48px;\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: none;\r\n    }\r\n  }\r\n  .desktop-icon {\r\n    height: 48px;\r\n    display: none;\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: block;\r\n    }\r\n  }\r\n  .right-eye {\r\n    animation-delay: 20ms;\r\n  }\r\n  &:hover {\r\n    .left-eye,\r\n    .right-eye {\r\n      transform-origin: center 60%;\r\n      animation-name: ${blink};\r\n      animation-duration: 350ms;\r\n      animation-iteration-count: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledLogo = styled.img`\r\n  margin-left: 16px;\r\n  margin-right: 16px;\r\n  height: 48px;\r\n`;\r\n\r\nconst StyledLogoWithTextIcon = styled.img`\r\n  margin-left: 16px;\r\n  margin-right: 32px;\r\n  height: 48px;\r\n`;\r\n\r\nconst Logo: React.FC<Props> = ({ isPushed, isDark, primaryMenu, togglePush, href }) => {\r\n  const isAbsoluteUrl = href.startsWith(\"http\");\r\n  const innerLogo = (\r\n    <>\r\n      {/* <LogoIcon className=\"mobile-icon\" /> */}\r\n      {/* <LogoWithText className=\"desktop-icon\" isDark={isDark} /> */}\r\n      <StyledLogo className=\"mobile-icon\" src={ primaryMenu ? \"/images/logo.png\" : \"/images/logo.png\"}/>\r\n      <StyledLogoWithTextIcon className=\"desktop-icon\" src={ primaryMenu ? \"/images/logoWithText-Primary.png\" : \"/images/logoWithText.png\"}/>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Flex>\r\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush}>\r\n        {isPushed ? (\r\n          <HamburgerCloseIcon width=\"24px\" color=\"hamburger\" />\r\n        ) : (\r\n          <HamburgerIcon width=\"24px\" color=\"hamburger\" />\r\n        )}\r\n      </MenuButton>\r\n\r\n      {isAbsoluteUrl ? (\r\n        <StyledLink as=\"a\" href={href} aria-label=\"Pancake home page\">\r\n          {innerLogo}\r\n        </StyledLink>\r\n      ) : (\r\n        <StyledLink to={href} aria-label=\"Pancake home page\">\r\n          {innerLogo}\r\n        </StyledLink>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark && prev.primaryMenu === next.primaryMenu);\r\n","import styled from \"styled-components\";\r\nimport Button from \"../../../components/Button/Button\";\r\n\r\nconst MenuButton = styled(Button)`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 0 8px;\r\n  border-radius: 8px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const LangMenuButton = styled(Button)`\r\n  color: #fff;\r\n  padding: 0 8px;\r\n  border-radius: 8px;\r\n  \r\n`;\r\n\r\nLangMenuButton.defaultProps = {\r\n  variant: \"text\",\r\n  size: \"sm\",\r\n};\r\n\r\nMenuButton.defaultProps = {\r\n  variant: \"text\",\r\n  size: \"sm\",\r\n};\r\n\r\nexport default MenuButton;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// import { PancakeRoundIcon } from \"../../../components/Svg\";\r\nimport Text from \"../../../components/Text/Text\";\r\nimport Skeleton from \"../../../components/Skeleton/Skeleton\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\n\r\ninterface Props {\r\n  treePriceUsd?: number;\r\n}\r\n\r\nconst PriceContainer = styled.div`\r\n  display: none;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  height: 42px;\r\n  border-radius: 24px;\r\n  margin: 0px 10px;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 100%;\r\n    display: flex;\r\n  }\r\n  .right-eye {\r\n    animation-delay: 20ms;\r\n  }\r\n`;\r\n\r\nconst SkeletonContainer = styled.div`\r\n  display: none;\r\n  align-items: center;\r\n  padding: 0px 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 100%;\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst PriceLink = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 12px;\r\n  svg {\r\n    transition: transform 0.3s;\r\n  }\r\n  :hover {\r\n    svg {\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubNavPrice: React.FC<Props> = ({ treePriceUsd }) => {\r\n  return treePriceUsd ? (\r\n      <PriceContainer>\r\n        <PriceLink\r\n        >\r\n            <Text color=\"text\" bold>{`$${treePriceUsd.toFixed(6)}`}</Text>\r\n        </PriceLink>\r\n      </PriceContainer>\r\n    ) : (\r\n      <SkeletonContainer>\r\n        <Skeleton width={100} height={32} />\r\n      </SkeletonContainer>\r\n    );\r\n};\r\n\r\nexport default React.memo(SubNavPrice);\r\n"],"mappings":"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","sourceRoot":""}